services:
  server:
    build:
      context: .
      target: final
    ports:
      - 8080:8080
    environment:
      - DATABASE_URL=${DB_URL}
    develop:
      watch:
        - action: rebuild
          path: ./src
        - action: rebuild
          path: ./templates
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=todo
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    # expose:
    #   - 5432
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - 16686:16686 # UI
      - 4317:4317

  # prometheus:
  #   image: prom/prometheus:latest
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #   ports:
  #     - 9090:9090

  # grafana:
  #   image: grafana/grafana:latest
  #   ports:
  #     - 3000:3000

  # otel-collector:
  #   image: otel/opentelemetry-collector:latest
  #   volumes:
  #     - ./otel-collector-config.yml:/etc/otel-collector-config.yml
  #   command: ["--config=/etc/otel-collector-config.yml"]
  #   ports:
  #     - 55680:55680 # OpenTelemetry default port

volumes:
  db-data:
secrets:
  db-password:
    file: db/password.txt
