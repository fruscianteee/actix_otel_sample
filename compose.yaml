services:
  # server:
  #   build:
  #     context: .
  #     target: final
  #   ports:
  #     - 8080:8080
  #   environment:
  #     - DATABASE_URL=${DB_URL}
  #   develop:
  #     watch:
  #       - action: rebuild
  #         path: ./src
  #       - action: rebuild
  #         path: ./templates
  #   depends_on:
  #     db:
  #       condition: service_healthy
  db:
    image: postgres
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=todo
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    # expose:
    #   - 5432
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Jaeger
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    restart: always
    ports:
      - "16686:16686"
      - "14268"
      - "14250"

  # Zipkin
  zipkin-all-in-one:
    image: openzipkin/zipkin:latest
    environment:
      - JAVA_OPTS=-Xms1024m -Xmx1024m -XX:+ExitOnOutOfMemoryError
    restart: always
    ports:
      - "9411:9411"

  prometheus:
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  # grafana:
  #   image: grafana/grafana:latest
  #   ports:
  #     - 3000:3000

  otel-collector:
    image: otel/opentelemetry-collector:0.88.0
    restart: always
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger-all-in-one

volumes:
  db-data:
secrets:
  db-password:
    file: db/password.txt
